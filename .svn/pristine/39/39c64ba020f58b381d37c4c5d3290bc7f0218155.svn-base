@model LiveMonitoringWeb.Models.Configuration

@{
    var role = System.Web.Security.Roles.GetRolesForUser(WebSecurity.CurrentUserName);
    if (role[0] == "Admin")
    {
        Layout = "~/Views/Shared/_Layout_AdminOuth.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout_Outh.cshtml";
    }
    ViewBag.Title = "Details";
}
<div class="container" style="min-height:470px;height:100%;">
    <div class="row">

        <div class="col-sm-12">
            <h3><span class="glyphicon glyphicon-cog"></span> Configuration [Time Interval(sec.)] &#58;&#58; Details</h3>
            <hr />
        </div>
        <div class="col-sm-1"></div><div class="col-sm-10" style="margin-bottom:100px;">
            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.BrowserTacker_Interval)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.BrowserTacker_Interval)
            </div>

            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.ScreenShot_Interval)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.ScreenShot_Interval)
            </div>

            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.MachineIdle_Interval)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.MachineIdle_Interval)
            </div>
            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.MachineIdle_MinTime)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.MachineIdle_MinTime)
            </div>
            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.KeyLogger_Interval)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.KeyLogger_Interval)
            </div>
            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.KeyLogger_MinTime)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.KeyLogger_MinTime)
            </div>
            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.AppTracker_Interval)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.AppTracker_Interval)
            </div>
            <div class="display-label label-text">
                <span>@Html.DisplayFor(model => model.IsActive)</span> @Html.DisplayNameFor(model => model.IsActive)
            </div>
            <div class="display-field">

            </div>

            <div class="display-label label-text">
                <span>@Html.DisplayFor(model => model.IsSendBlockData)</span> @Html.DisplayNameFor(model => model.IsSendBlockData)
            </div>
            <div class="display-field">

            </div>

            <div class="display-label label-text">
                <span>@Html.DisplayFor(model => model.IsDeleted)</span>  @Html.DisplayNameFor(model => model.IsDeleted)
            </div>
            <div class="display-field">

            </div>
            <div class="display-label label-text">
                @Html.DisplayNameFor(model => model.UserProfile.UserName)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.UserProfile.UserName)
            </div>
            <p style="padding-top:10px;">
                @Html.ActionLink("Edit", "Edit", new { id = Model.ConfigurationId }) |
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div><div class="col-sm-1"></div>
    </div>
    </div>